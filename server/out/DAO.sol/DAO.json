{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "proposal",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "newProposalDetails",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "thresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensPurchased",
          "type": "uint256"
        }
      ],
      "name": "tokensPurchased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkDAOtokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "checkTokensCostInEther",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "proposal",
          "type": "string"
        }
      ],
      "name": "newProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "proposal",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        },
        {
          "internalType": "enum DAO.VotingStatus",
          "name": "votingStatus",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "resultCount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "purchaseDAOtokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "setThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerEther",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260646006553480156200001657600080fd5b5060405180606001604052806023815260200162001358602391396040805180820190915260038082526244414f60e81b602083015262000058838262000127565b50600462000067828262000127565b5050600580546001600160a01b0319163317905550620001f3565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ad57607f821691505b602082108103620000ce57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012257600081815260208120601f850160051c81016020861015620000fd5750805b601f850160051c820191505b818110156200011e5782815560010162000109565b5050505b505050565b81516001600160401b0381111562000143576200014362000082565b6200015b8162000154845462000098565b84620000d4565b602080601f8311600181146200019357600084156200017a5750858301515b600019600386901b1c1916600185901b1785556200011e565b600085815260208120601f198616915b82811015620001c457888601518255948401946001909101908401620001a3565b5085821015620001e35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61115580620002036000396000f3fe60806040526004361061011f5760003560e01c8063481c6a75116100a0578063a9059cbb11610064578063a9059cbb1461034b578063b9c362091461036b578063c66569831461038d578063dd62ed3e146103a0578063f856d605146103c057600080fd5b8063481c6a75146102885780634f24186a146102c057806370a08231146102e057806395d89b4114610316578063a457c2d71461032b57600080fd5b806323b872dd116100e757806323b872dd146101f457806327db2f71146102145780632dfca44514610236578063313ce5671461024c578063395093511461026857600080fd5b8063013cf08b1461012457806306fdde031461015f578063095ea7b31461018157806313cc5724146101b157806318160ddd146101df575b600080fd5b34801561013057600080fd5b5061014461013f366004610c92565b6103d6565b60405161015696959493929190610d07565b60405180910390f35b34801561016b57600080fd5b506101746104a3565b6040516101569190610d6f565b34801561018d57600080fd5b506101a161019c366004610da5565b610535565b6040519015158152602001610156565b3480156101bd57600080fd5b506101d16101cc366004610c92565b61054f565b604051908152602001610156565b3480156101eb57600080fd5b506002546101d1565b34801561020057600080fd5b506101a161020f366004610dcf565b61055f565b34801561022057600080fd5b50336000908152602081905260409020546101d1565b34801561024257600080fd5b506101d160075481565b34801561025857600080fd5b5060405160128152602001610156565b34801561027457600080fd5b506101a1610283366004610da5565b610583565b34801561029457600080fd5b506005546102a8906001600160a01b031681565b6040516001600160a01b039091168152602001610156565b3480156102cc57600080fd5b506101d16102db366004610e21565b6105a5565b3480156102ec57600080fd5b506101d16102fb366004610ed2565b6001600160a01b031660009081526020819052604090205490565b34801561032257600080fd5b506101746106d8565b34801561033757600080fd5b506101a1610346366004610da5565b6106e7565b34801561035757600080fd5b506101a1610366366004610da5565b610767565b34801561037757600080fd5b5061038b610386366004610eed565b610775565b005b61038b61039b366004610c92565b610821565b3480156103ac57600080fd5b506101d16103bb366004610f0f565b610861565b3480156103cc57600080fd5b506101d160065481565b6008602052600090815260409020805481906103f190610f42565b80601f016020809104026020016040519081016040528092919081815260200182805461041d90610f42565b801561046a5780601f1061043f5761010080835404028352916020019161046a565b820191906000526020600020905b81548152906001019060200180831161044d57829003601f168201915b505050600184015460028501546003860154600487015460059097015495966001600160a01b039093169591945060ff90811693501686565b6060600380546104b290610f42565b80601f01602080910402602001604051908101604052809291908181526020018280546104de90610f42565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b5050505050905090565b60003361054381858561088c565b60019150505b92915050565b6000600654826105499190610f92565b60003361056d8582856109b0565b610578858585610a2a565b506001949350505050565b6000336105438185856105968383610861565b6105a09190610fb4565b61088c565b60078054600091826105b683610fc7565b90915550506040805160c081018252838152336020820152600091810182905290606082019081526000602080830182905260409283018290526007548252600890522081518190610608908261102e565b5060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083600281111561066a5761066a610cf1565b02179055506080820151600482015560a0909101516005909101805460ff19169115159190911790556007546040517f6f230f76c01c0302945bd6dea3feb5e915ad4d055584b0a41a7083ca87786d25916106c891859033906110ee565b60405180910390a1505060075490565b6060600480546104b290610f42565b600033816106f58286610861565b90508381101561075a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610578828686840361088c565b600033610543818585610a2a565b6005546001600160a01b031633146107cf5760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920746865206d616e616765722063616e2063616c6c000000000000006044820152606401610751565b60008281526008602090815260409182902060020183905581518481529081018390527f71163fade43780aaa187e6cbb8c027121c97cc33677892663953107827f73cc0910160405180910390a15050565b61082b3382610bce565b6040518181527f2d73649f1393ea75df45046ccd2d46c3fe316cc7b4c4df6702e79c6b333ae04e9060200160405180910390a150565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610751565b6001600160a01b03821661094f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610751565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006109bc8484610861565b90506000198114610a245781811015610a175760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610751565b610a24848484840361088c565b50505050565b6001600160a01b038316610a8e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610751565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610751565b6001600160a01b03831660009081526020819052604090205481811015610b685760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610751565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a24565b6001600160a01b038216610c245760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610751565b8060026000828254610c369190610fb4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600060208284031215610ca457600080fd5b5035919050565b6000815180845260005b81811015610cd157602081850181015186830182015201610cb5565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60c081526000610d1a60c0830189610cab565b6001600160a01b038816602084015260408301879052905060038510610d5057634e487b7160e01b600052602160045260246000fd5b84606083015283608083015282151560a0830152979650505050505050565b602081526000610d826020830184610cab565b9392505050565b80356001600160a01b0381168114610da057600080fd5b919050565b60008060408385031215610db857600080fd5b610dc183610d89565b946020939093013593505050565b600080600060608486031215610de457600080fd5b610ded84610d89565b9250610dfb60208501610d89565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e3357600080fd5b813567ffffffffffffffff80821115610e4b57600080fd5b818401915084601f830112610e5f57600080fd5b813581811115610e7157610e71610e0b565b604051601f8201601f19908116603f01168101908382118183101715610e9957610e99610e0b565b81604052828152876020848701011115610eb257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610ee457600080fd5b610d8282610d89565b60008060408385031215610f0057600080fd5b50508035926020909101359150565b60008060408385031215610f2257600080fd5b610f2b83610d89565b9150610f3960208401610d89565b90509250929050565b600181811c90821680610f5657607f821691505b602082108103610f7657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082610faf57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561054957610549610f7c565b600060018201610fd957610fd9610f7c565b5060010190565b601f821115610c8d57600081815260208120601f850160051c810160208610156110075750805b601f850160051c820191505b8181101561102657828155600101611013565b505050505050565b815167ffffffffffffffff81111561104857611048610e0b565b61105c816110568454610f42565b84610fe0565b602080601f83116001811461109157600084156110795750858301515b600019600386901b1c1916600185901b178555611026565b600085815260208120601f198616915b828110156110c0578886015182559484019460019091019084016110a1565b50858210156110de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8381526060602082015260006111076060830185610cab565b905060018060a01b038316604083015294935050505056fea26469706673582212209c89834ee941b2d87a9f085a78d5246539810aab3f37feec8db9e09d62498ab164736f6c63430008150033446563656e7472616c697a65644175746f6e6f6d6f75734f7267616e697a6174696f6e",
    "sourceMap": "111:2118:0:-:0;;;471:3;444:30;;948:105;;;;;;;;;;1980:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;;2046:13;2054:5;1980:113;2046:13;:::i;:::-;-1:-1:-1;2069:7:1;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;1027:7:0::1;:18:::0;;-1:-1:-1;;;;;;1027:18:0::1;1035:10;1027:18;::::0;;-1:-1:-1;111:2118:0;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:5;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:5;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:5;;;2580:26;2531:89;-1:-1:-1;;1335:1:5;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:5;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:5;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:5;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:5:o;:::-;111:2118:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061011f5760003560e01c8063481c6a75116100a0578063a9059cbb11610064578063a9059cbb1461034b578063b9c362091461036b578063c66569831461038d578063dd62ed3e146103a0578063f856d605146103c057600080fd5b8063481c6a75146102885780634f24186a146102c057806370a08231146102e057806395d89b4114610316578063a457c2d71461032b57600080fd5b806323b872dd116100e757806323b872dd146101f457806327db2f71146102145780632dfca44514610236578063313ce5671461024c578063395093511461026857600080fd5b8063013cf08b1461012457806306fdde031461015f578063095ea7b31461018157806313cc5724146101b157806318160ddd146101df575b600080fd5b34801561013057600080fd5b5061014461013f366004610c92565b6103d6565b60405161015696959493929190610d07565b60405180910390f35b34801561016b57600080fd5b506101746104a3565b6040516101569190610d6f565b34801561018d57600080fd5b506101a161019c366004610da5565b610535565b6040519015158152602001610156565b3480156101bd57600080fd5b506101d16101cc366004610c92565b61054f565b604051908152602001610156565b3480156101eb57600080fd5b506002546101d1565b34801561020057600080fd5b506101a161020f366004610dcf565b61055f565b34801561022057600080fd5b50336000908152602081905260409020546101d1565b34801561024257600080fd5b506101d160075481565b34801561025857600080fd5b5060405160128152602001610156565b34801561027457600080fd5b506101a1610283366004610da5565b610583565b34801561029457600080fd5b506005546102a8906001600160a01b031681565b6040516001600160a01b039091168152602001610156565b3480156102cc57600080fd5b506101d16102db366004610e21565b6105a5565b3480156102ec57600080fd5b506101d16102fb366004610ed2565b6001600160a01b031660009081526020819052604090205490565b34801561032257600080fd5b506101746106d8565b34801561033757600080fd5b506101a1610346366004610da5565b6106e7565b34801561035757600080fd5b506101a1610366366004610da5565b610767565b34801561037757600080fd5b5061038b610386366004610eed565b610775565b005b61038b61039b366004610c92565b610821565b3480156103ac57600080fd5b506101d16103bb366004610f0f565b610861565b3480156103cc57600080fd5b506101d160065481565b6008602052600090815260409020805481906103f190610f42565b80601f016020809104026020016040519081016040528092919081815260200182805461041d90610f42565b801561046a5780601f1061043f5761010080835404028352916020019161046a565b820191906000526020600020905b81548152906001019060200180831161044d57829003601f168201915b505050600184015460028501546003860154600487015460059097015495966001600160a01b039093169591945060ff90811693501686565b6060600380546104b290610f42565b80601f01602080910402602001604051908101604052809291908181526020018280546104de90610f42565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b5050505050905090565b60003361054381858561088c565b60019150505b92915050565b6000600654826105499190610f92565b60003361056d8582856109b0565b610578858585610a2a565b506001949350505050565b6000336105438185856105968383610861565b6105a09190610fb4565b61088c565b60078054600091826105b683610fc7565b90915550506040805160c081018252838152336020820152600091810182905290606082019081526000602080830182905260409283018290526007548252600890522081518190610608908261102e565b5060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083600281111561066a5761066a610cf1565b02179055506080820151600482015560a0909101516005909101805460ff19169115159190911790556007546040517f6f230f76c01c0302945bd6dea3feb5e915ad4d055584b0a41a7083ca87786d25916106c891859033906110ee565b60405180910390a1505060075490565b6060600480546104b290610f42565b600033816106f58286610861565b90508381101561075a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610578828686840361088c565b600033610543818585610a2a565b6005546001600160a01b031633146107cf5760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920746865206d616e616765722063616e2063616c6c000000000000006044820152606401610751565b60008281526008602090815260409182902060020183905581518481529081018390527f71163fade43780aaa187e6cbb8c027121c97cc33677892663953107827f73cc0910160405180910390a15050565b61082b3382610bce565b6040518181527f2d73649f1393ea75df45046ccd2d46c3fe316cc7b4c4df6702e79c6b333ae04e9060200160405180910390a150565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610751565b6001600160a01b03821661094f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610751565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006109bc8484610861565b90506000198114610a245781811015610a175760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610751565b610a24848484840361088c565b50505050565b6001600160a01b038316610a8e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610751565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610751565b6001600160a01b03831660009081526020819052604090205481811015610b685760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610751565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a24565b6001600160a01b038216610c245760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610751565b8060026000828254610c369190610fb4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600060208284031215610ca457600080fd5b5035919050565b6000815180845260005b81811015610cd157602081850181015186830182015201610cb5565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60c081526000610d1a60c0830189610cab565b6001600160a01b038816602084015260408301879052905060038510610d5057634e487b7160e01b600052602160045260246000fd5b84606083015283608083015282151560a0830152979650505050505050565b602081526000610d826020830184610cab565b9392505050565b80356001600160a01b0381168114610da057600080fd5b919050565b60008060408385031215610db857600080fd5b610dc183610d89565b946020939093013593505050565b600080600060608486031215610de457600080fd5b610ded84610d89565b9250610dfb60208501610d89565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e3357600080fd5b813567ffffffffffffffff80821115610e4b57600080fd5b818401915084601f830112610e5f57600080fd5b813581811115610e7157610e71610e0b565b604051601f8201601f19908116603f01168101908382118183101715610e9957610e99610e0b565b81604052828152876020848701011115610eb257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610ee457600080fd5b610d8282610d89565b60008060408385031215610f0057600080fd5b50508035926020909101359150565b60008060408385031215610f2257600080fd5b610f2b83610d89565b9150610f3960208401610d89565b90509250929050565b600181811c90821680610f5657607f821691505b602082108103610f7657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082610faf57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561054957610549610f7c565b600060018201610fd957610fd9610f7c565b5060010190565b601f821115610c8d57600081815260208120601f850160051c810160208610156110075750805b601f850160051c820191505b8181101561102657828155600101611013565b505050505050565b815167ffffffffffffffff81111561104857611048610e0b565b61105c816110568454610f42565b84610fe0565b602080601f83116001811461109157600084156110795750858301515b600019600386901b1c1916600185901b178555611026565b600085815260208120601f198616915b828110156110c0578886015182559484019460019091019084016110a1565b50858210156110de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8381526060602082015260006111076060830185610cab565b905060018060a01b038316604083015294935050505056fea26469706673582212209c89834ee941b2d87a9f085a78d5246539810aab3f37feec8db9e09d62498ab164736f6c63430008150033",
    "sourceMap": "111:2118:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:41;;;;;;;;;;-1:-1:-1;511:41:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;2158:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;;;;;-1:-1:-1;4444:197:1;;;;;:::i;:::-;;:::i;:::-;;;2371:14:5;;2364:22;2346:41;;2334:2;2319:18;4444:197:1;2206:187:5;1816:121:0;;;;;;;;;;-1:-1:-1;1816:121:0;;;;;:::i;:::-;;:::i;:::-;;;2544:25:5;;;2532:2;2517:18;1816:121:0;2398:177:5;3255:106:1;;;;;;;;;;-1:-1:-1;3342:12:1;;3255:106;;5203:256;;;;;;;;;;-1:-1:-1;5203:256:1;;;;;:::i;:::-;;:::i;2120:107:0:-;;;;;;;;;;-1:-1:-1;2209:10:0;2172:4;3519:18:1;;;;;;;;;;;2120:107:0;;482:22;;;;;;;;;;;;;;;;3104:91:1;;;;;;;;;;-1:-1:-1;3104:91:1;;3186:2;3055:36:5;;3043:2;3028:18;3104:91:1;2913:184:5;5854:234:1;;;;;;;;;;-1:-1:-1;5854:234:1;;;;;:::i;:::-;;:::i;223:22:0:-;;;;;;;;;;-1:-1:-1;223:22:0;;;;-1:-1:-1;;;;;223:22:0;;;;;;-1:-1:-1;;;;;3266:32:5;;;3248:51;;3236:2;3221:18;223:22:0;3102:203:5;1064:440:0;;;;;;;;;;-1:-1:-1;1064:440:0;;;;;:::i;:::-;;:::i;3419:125:1:-;;;;;;;;;;-1:-1:-1;3419:125:1;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;;;;;;;;;;;:::i;6575:427::-;;;;;;;;;;-1:-1:-1;6575:427:1;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;;;;;-1:-1:-1;3740:189:1;;;;;:::i;:::-;;:::i;1510:234:0:-;;;;;;;;;;-1:-1:-1;1510:234:0;;;;;:::i;:::-;;:::i;:::-;;1943:171;;;;;;:::i;:::-;;:::i;3987:149:1:-;;;;;;;;;;-1:-1:-1;3987:149:1;;;;;:::i;:::-;;:::i;444:30:0:-;;;;;;;;;;;;;;;;511:41;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;511:41:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;511:41:0;;;;;;-1:-1:-1;511:41:0;;;;;-1:-1:-1;511:41:0;;:::o;2158:98:1:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:4;4581:32:1;719:10:4;4597:7:1;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;1816:121:0:-;1881:4;1915:14;;1908:6;:21;;;;:::i;5203:256:1:-;5300:4;719:10:4;5356:38:1;5372:4;719:10:4;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;719:10:4;5996:64:1;719:10:4;6012:7:1;6049:10;6021:25;719:10:4;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;1064:440:0:-;1144:10;:12;;1124:4;;;1144:12;;;:::i;:::-;;;;-1:-1:-1;;1188:160:0;;;;;;;;;;;1242:10;1188:160;;;;-1:-1:-1;1188:160:0;;;;;;;;;;;;;1318:1;1188:160;;;;;;;;;;;;;;1176:10;;1166:21;;:9;:21;;;:182;;:21;;:182;;:21;:182;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1166:182:0;;;;;-1:-1:-1;;;;;1166:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1166:182:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1166:182:0;;;;;;;;;;1404:10;;1363:107;;;;;;1428:8;;1450:10;;1363:107;:::i;:::-;;;;;;;;-1:-1:-1;;1487:10:0;;;1064:440::o;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:4;6668:4:1;6749:25;719:10:4;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;8886:2:5;6784:85:1;;;8868:21:5;8925:2;8905:18;;;8898:30;8964:34;8944:18;;;8937:62;-1:-1:-1;;;9015:18:5;;;9008:35;9060:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:4;3873:28:1;719:10:4;3890:2:1;3894:6;3873:9;:28::i;1510:234:0:-;614:7;;-1:-1:-1;;;;;614:7:0;602:10;:19;594:56;;;;-1:-1:-1;;;594:56:0;;9292:2:5;594:56:0;;;9274:21:5;9331:2;9311:18;;;9304:30;9370:27;9350:18;;;9343:55;9415:18;;594:56:0;9090:349:5;594:56:0;1599:22:::1;::::0;;;:9:::1;:22;::::0;;;;;;;;:32:::1;;:42:::0;;;1657:80;;9618:25:5;;;9659:18;;;9652:34;;;1657:80:0::1;::::0;9591:18:5;1657:80:0::1;;;;;;;1510:234:::0;;:::o;1943:171::-;2013:25;2019:10;2031:6;2013:5;:25::i;:::-;2053:54;;2544:25:5;;;2053:54:0;;2532:2:5;2517:18;2053:54:0;;;;;;;1943:171;:::o;3987:149:1:-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;9899:2:5;10550:68:1;;;9881:21:5;9938:2;9918:18;;;9911:30;9977:34;9957:18;;;9950:62;-1:-1:-1;;;10028:18:5;;;10021:34;10072:19;;10550:68:1;9697:400:5;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;10304:2:5;10628:68:1;;;10286:21:5;10343:2;10323:18;;;10316:30;10382:34;10362:18;;;10355:62;-1:-1:-1;;;10433:18:5;;;10426:32;10475:19;;10628:68:1;10102:398:5;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;2544:25:5;;;10758:32:1;;2517:18:5;10758:32:1;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;10707:2:5;11297:68:1;;;10689:21:5;10746:2;10726:18;;;10719:30;10785:31;10765:18;;;10758:59;10834:18;;11297:68:1;10505:353:5;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;11065:2:5;7544:68:1;;;11047:21:5;11104:2;11084:18;;;11077:30;11143:34;11123:18;;;11116:62;-1:-1:-1;;;11194:18:5;;;11187:35;11239:19;;7544:68:1;10863:401:5;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;11471:2:5;7622:64:1;;;11453:21:5;11510:2;11490:18;;;11483:30;11549:34;11529:18;;;11522:62;-1:-1:-1;;;11600:18:5;;;11593:33;11643:19;;7622:64:1;11269:399:5;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;11875:2:5;7793:72:1;;;11857:21:5;11914:2;11894:18;;;11887:30;11953:34;11933:18;;;11926:62;-1:-1:-1;;;12004:18:5;;;11997:36;12050:19;;7793:72:1;11673:402:5;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;2544:25:5;;;8114:13:1;;8163:26;;2517:18:5;8163:26:1;;;;;;;8200:37;12073:91;8520:535;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;12282:2:5;8595:65:1;;;12264:21:5;12321:2;12301:18;;;12294:30;12360:33;12340:18;;;12333:61;12411:18;;8595:65:1;12080:355:5;8595:65:1;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;2544:25:5;;;8952:37:1;;2517:18:5;8952:37:1;;;;;;;8520:535;;:::o;12073:91::-;;;;:::o;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;199:423::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;345:3;548:1;541:4;532:6;527:3;523:16;519:27;512:38;611:4;604:2;600:7;595:2;587:6;583:15;579:29;574:3;570:39;566:50;559:57;;;199:423;;;;:::o;627:127::-;688:10;683:3;679:20;676:1;669:31;719:4;716:1;709:15;743:4;740:1;733:15;759:780;1054:3;1043:9;1036:22;1017:4;1075:46;1116:3;1105:9;1101:19;1093:6;1075:46;:::i;:::-;-1:-1:-1;;;;;1157:32:5;;1152:2;1137:18;;1130:60;1221:2;1206:18;;1199:34;;;1067:54;-1:-1:-1;1263:1:5;1252:13;;1242:144;;1308:10;1303:3;1299:20;1296:1;1289:31;1343:4;1340:1;1333:15;1371:4;1368:1;1361:15;1242:144;1422:6;1417:2;1406:9;1402:18;1395:34;1466:6;1460:3;1449:9;1445:19;1438:35;1524:6;1517:14;1510:22;1504:3;1493:9;1489:19;1482:51;759:780;;;;;;;;;:::o;1544:220::-;1693:2;1682:9;1675:21;1656:4;1713:45;1754:2;1743:9;1739:18;1731:6;1713:45;:::i;:::-;1705:53;1544:220;-1:-1:-1;;;1544:220:5:o;1769:173::-;1837:20;;-1:-1:-1;;;;;1886:31:5;;1876:42;;1866:70;;1932:1;1929;1922:12;1866:70;1769:173;;;:::o;1947:254::-;2015:6;2023;2076:2;2064:9;2055:7;2051:23;2047:32;2044:52;;;2092:1;2089;2082:12;2044:52;2115:29;2134:9;2115:29;:::i;:::-;2105:39;2191:2;2176:18;;;;2163:32;;-1:-1:-1;;;1947:254:5:o;2580:328::-;2657:6;2665;2673;2726:2;2714:9;2705:7;2701:23;2697:32;2694:52;;;2742:1;2739;2732:12;2694:52;2765:29;2784:9;2765:29;:::i;:::-;2755:39;;2813:38;2847:2;2836:9;2832:18;2813:38;:::i;:::-;2803:48;;2898:2;2887:9;2883:18;2870:32;2860:42;;2580:328;;;;;:::o;3310:127::-;3371:10;3366:3;3362:20;3359:1;3352:31;3402:4;3399:1;3392:15;3426:4;3423:1;3416:15;3442:922;3511:6;3564:2;3552:9;3543:7;3539:23;3535:32;3532:52;;;3580:1;3577;3570:12;3532:52;3620:9;3607:23;3649:18;3690:2;3682:6;3679:14;3676:34;;;3706:1;3703;3696:12;3676:34;3744:6;3733:9;3729:22;3719:32;;3789:7;3782:4;3778:2;3774:13;3770:27;3760:55;;3811:1;3808;3801:12;3760:55;3847:2;3834:16;3869:2;3865;3862:10;3859:36;;;3875:18;;:::i;:::-;3950:2;3944:9;3918:2;4004:13;;-1:-1:-1;;4000:22:5;;;4024:2;3996:31;3992:40;3980:53;;;4048:18;;;4068:22;;;4045:46;4042:72;;;4094:18;;:::i;:::-;4134:10;4130:2;4123:22;4169:2;4161:6;4154:18;4209:7;4204:2;4199;4195;4191:11;4187:20;4184:33;4181:53;;;4230:1;4227;4220:12;4181:53;4286:2;4281;4277;4273:11;4268:2;4260:6;4256:15;4243:46;4331:1;4309:15;;;4326:2;4305:24;4298:35;;;;-1:-1:-1;4313:6:5;3442:922;-1:-1:-1;;;;;3442:922:5:o;4369:186::-;4428:6;4481:2;4469:9;4460:7;4456:23;4452:32;4449:52;;;4497:1;4494;4487:12;4449:52;4520:29;4539:9;4520:29;:::i;4560:248::-;4628:6;4636;4689:2;4677:9;4668:7;4664:23;4660:32;4657:52;;;4705:1;4702;4695:12;4657:52;-1:-1:-1;;4728:23:5;;;4798:2;4783:18;;;4770:32;;-1:-1:-1;4560:248:5:o;4813:260::-;4881:6;4889;4942:2;4930:9;4921:7;4917:23;4913:32;4910:52;;;4958:1;4955;4948:12;4910:52;4981:29;5000:9;4981:29;:::i;:::-;4971:39;;5029:38;5063:2;5052:9;5048:18;5029:38;:::i;:::-;5019:48;;4813:260;;;;;:::o;5078:380::-;5157:1;5153:12;;;;5200;;;5221:61;;5275:4;5267:6;5263:17;5253:27;;5221:61;5328:2;5320:6;5317:14;5297:18;5294:38;5291:161;;5374:10;5369:3;5365:20;5362:1;5355:31;5409:4;5406:1;5399:15;5437:4;5434:1;5427:15;5291:161;;5078:380;;;:::o;5463:127::-;5524:10;5519:3;5515:20;5512:1;5505:31;5555:4;5552:1;5545:15;5579:4;5576:1;5569:15;5595:217;5635:1;5661;5651:132;;5705:10;5700:3;5696:20;5693:1;5686:31;5740:4;5737:1;5730:15;5768:4;5765:1;5758:15;5651:132;-1:-1:-1;5797:9:5;;5595:217::o;5817:125::-;5882:9;;;5903:10;;;5900:36;;;5916:18;;:::i;5947:135::-;5986:3;6007:17;;;6004:43;;6027:18;;:::i;:::-;-1:-1:-1;6074:1:5;6063:13;;5947:135::o;6213:545::-;6315:2;6310:3;6307:11;6304:448;;;6351:1;6376:5;6372:2;6365:17;6421:4;6417:2;6407:19;6491:2;6479:10;6475:19;6472:1;6468:27;6462:4;6458:38;6527:4;6515:10;6512:20;6509:47;;;-1:-1:-1;6550:4:5;6509:47;6605:2;6600:3;6596:12;6593:1;6589:20;6583:4;6579:31;6569:41;;6660:82;6678:2;6671:5;6668:13;6660:82;;;6723:17;;;6704:1;6693:13;6660:82;;;6664:3;;;6213:545;;;:::o;6934:1352::-;7060:3;7054:10;7087:18;7079:6;7076:30;7073:56;;;7109:18;;:::i;:::-;7138:97;7228:6;7188:38;7220:4;7214:11;7188:38;:::i;:::-;7182:4;7138:97;:::i;:::-;7290:4;;7354:2;7343:14;;7371:1;7366:663;;;;8073:1;8090:6;8087:89;;;-1:-1:-1;8142:19:5;;;8136:26;8087:89;-1:-1:-1;;6891:1:5;6887:11;;;6883:24;6879:29;6869:40;6915:1;6911:11;;;6866:57;8189:81;;7336:944;;7366:663;6160:1;6153:14;;;6197:4;6184:18;;-1:-1:-1;;7402:20:5;;;7520:236;7534:7;7531:1;7528:14;7520:236;;;7623:19;;;7617:26;7602:42;;7715:27;;;;7683:1;7671:14;;;;7550:19;;7520:236;;;7524:3;7784:6;7775:7;7772:19;7769:201;;;7845:19;;;7839:26;-1:-1:-1;;7928:1:5;7924:14;;;7940:3;7920:24;7916:37;7912:42;7897:58;7882:74;;7769:201;-1:-1:-1;;;;;8016:1:5;8000:14;;;7996:22;7983:36;;-1:-1:-1;6934:1352:5:o;8291:388::-;8496:6;8485:9;8478:25;8539:2;8534;8523:9;8519:18;8512:30;8459:4;8559:45;8600:2;8589:9;8585:18;8577:6;8559:45;:::i;:::-;8551:53;;8669:1;8665;8660:3;8656:11;8652:19;8644:6;8640:32;8635:2;8624:9;8620:18;8613:60;8291:388;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "checkDAOtokenBalance()": "27db2f71",
    "checkTokensCostInEther(uint256)": "13cc5724",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "manager()": "481c6a75",
    "name()": "06fdde03",
    "newProposal(string)": "4f24186a",
    "proposalId()": "2dfca445",
    "proposals(uint256)": "013cf08b",
    "purchaseDAOtokens(uint256)": "c6656983",
    "setThreshold(uint256,uint256)": "b9c36209",
    "symbol()": "95d89b41",
    "tokensPerEther()": "f856d605",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposal\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"newProposalDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"thresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensPurchased\",\"type\":\"uint256\"}],\"name\":\"tokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkDAOtokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"checkTokensCostInEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"proposal\",\"type\":\"string\"}],\"name\":\"newProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"proposal\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"enum DAO.VotingStatus\",\"name\":\"votingStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"resultCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"purchaseDAOtokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAO.sol\":\"DAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/DAO.sol\":{\"keccak256\":\"0xf99a17acaeeb93b485f1927d96db6a0a18ad9c10b4930b4e4557b876e267f18a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed5aea405c74c1db5482105f1911a131d4a6d7a380ad76a4e15db6ae0b037dd\",\"dweb:/ipfs/QmNMDTP1zBLqp6gfjCVbR2Bp38TnaW5Tkc9pZRud1NioRb\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "proposal",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "newProposalDetails",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "thresholdSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokensPurchased",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "tokensPurchased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkDAOtokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkTokensCostInEther",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "manager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "proposal",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "newProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "string",
              "name": "proposal",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "enum DAO.VotingStatus",
              "name": "votingStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "resultCount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "result",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "purchaseDAOtokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setThreshold"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensPerEther",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/DAO.sol": "DAO"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/DAO.sol": {
        "keccak256": "0xf99a17acaeeb93b485f1927d96db6a0a18ad9c10b4930b4e4557b876e267f18a",
        "urls": [
          "bzz-raw://6ed5aea405c74c1db5482105f1911a131d4a6d7a380ad76a4e15db6ae0b037dd",
          "dweb:/ipfs/QmNMDTP1zBLqp6gfjCVbR2Bp38TnaW5Tkc9pZRud1NioRb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/DAO.sol",
    "id": 175,
    "exportedSymbols": {
      "Context": [
        886
      ],
      "DAO": [
        174
      ],
      "ERC20": [
        761
      ],
      "IERC20": [
        839
      ],
      "IERC20Metadata": [
        864
      ]
    },
    "nodeType": "SourceUnit",
    "src": "30:2199:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "30:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "54:55:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 175,
        "sourceUnit": 762,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 174,
        "nodeType": "ContractDefinition",
        "src": "111:2118:0",
        "nodes": [
          {
            "id": 8,
            "nodeType": "EnumDefinition",
            "src": "139:78:0",
            "nodes": [],
            "canonicalName": "DAO.VotingStatus",
            "members": [
              {
                "id": 5,
                "name": "notStarted",
                "nameLocation": "171:10:0",
                "nodeType": "EnumValue",
                "src": "171:10:0"
              },
              {
                "id": 6,
                "name": "live",
                "nameLocation": "192:4:0",
                "nodeType": "EnumValue",
                "src": "192:4:0"
              },
              {
                "id": 7,
                "name": "ended",
                "nameLocation": "206:5:0",
                "nodeType": "EnumValue",
                "src": "206:5:0"
              }
            ],
            "name": "VotingStatus",
            "nameLocation": "144:12:0"
          },
          {
            "id": 10,
            "nodeType": "VariableDeclaration",
            "src": "223:22:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "481c6a75",
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "238:7:0",
            "scope": 174,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "223:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24,
            "nodeType": "StructDefinition",
            "src": "252:186:0",
            "nodes": [],
            "canonicalName": "DAO.Proposals",
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "proposal",
                "nameLocation": "290:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "283:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "283:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "317:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "309:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "threshold",
                "nameLocation": "340:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "335:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "votingStatus",
                "nameLocation": "372:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "359:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_VotingStatus_$8",
                  "typeString": "enum DAO.VotingStatus"
                },
                "typeName": {
                  "id": 18,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17,
                    "name": "VotingStatus",
                    "nameLocations": [
                      "359:12:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8,
                    "src": "359:12:0"
                  },
                  "referencedDeclaration": 8,
                  "src": "359:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_VotingStatus_$8",
                    "typeString": "enum DAO.VotingStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "resultCount",
                "nameLocation": "399:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "394:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "result",
                "nameLocation": "425:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "420:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 22,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "420:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposals",
            "nameLocation": "259:9:0",
            "scope": 174,
            "visibility": "public"
          },
          {
            "id": 27,
            "nodeType": "VariableDeclaration",
            "src": "444:30:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "f856d605",
            "mutability": "mutable",
            "name": "tokensPerEther",
            "nameLocation": "456:14:0",
            "scope": 174,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "444:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "471:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "id": 29,
            "nodeType": "VariableDeclaration",
            "src": "482:22:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "2dfca445",
            "mutability": "mutable",
            "name": "proposalId",
            "nameLocation": "494:10:0",
            "scope": 174,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "482:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34,
            "nodeType": "VariableDeclaration",
            "src": "511:41:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "013cf08b",
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "543:9:0",
            "scope": 174,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposals_$24_storage_$",
              "typeString": "mapping(uint256 => struct DAO.Proposals)"
            },
            "typeName": {
              "id": 33,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 30,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "519:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "511:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposals_$24_storage_$",
                "typeString": "mapping(uint256 => struct DAO.Proposals)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "Proposals",
                  "nameLocations": [
                    "525:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "525:9:0"
                },
                "referencedDeclaration": 24,
                "src": "525:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposals_$24_storage_ptr",
                  "typeString": "struct DAO.Proposals"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 46,
            "nodeType": "ModifierDefinition",
            "src": "559:109:0",
            "nodes": [],
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "584:84:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "602:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "606:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "602:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 39,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "614:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "602:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206d616e616765722063616e2063616c6c",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c96106f5388c58e4d5cc1373fb98b0851ce7fe0c5ff2b68cbd1eb912f147675c",
                          "typeString": "literal_string \"Only the manager can call\""
                        },
                        "value": "Only the manager can call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c96106f5388c58e4d5cc1373fb98b0851ce7fe0c5ff2b68cbd1eb912f147675c",
                          "typeString": "literal_string \"Only the manager can call\""
                        }
                      ],
                      "id": 36,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "594:56:0"
                },
                {
                  "id": 44,
                  "nodeType": "PlaceholderStatement",
                  "src": "660:1:0"
                }
              ]
            },
            "name": "onlyManager",
            "nameLocation": "568:11:0",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54,
            "nodeType": "EventDefinition",
            "src": "674:113:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6f230f76c01c0302945bd6dea3feb5e915ad4d055584b0a41a7083ca87786d25",
            "name": "newProposalDetails",
            "nameLocation": "680:18:0",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "718:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "713:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "745:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "738:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "772:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "764:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "703:83:0"
            }
          },
          {
            "id": 60,
            "nodeType": "EventDefinition",
            "src": "793:79:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "71163fade43780aaa187e6cbb8c027121c97cc33677892663953107827f73cc0",
            "name": "thresholdSet",
            "nameLocation": "799:12:0",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "831:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "826:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "threshold",
                  "nameLocation": "856:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "851:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "816:55:0"
            }
          },
          {
            "id": 64,
            "nodeType": "EventDefinition",
            "src": "878:64:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2d73649f1393ea75df45046ccd2d46c3fe316cc7b4c4df6702e79c6b333ae04e",
            "name": "tokensPurchased",
            "nameLocation": "884:15:0",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensPurchased",
                  "nameLocation": "919:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "914:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:37:0"
            }
          },
          {
            "id": 77,
            "nodeType": "FunctionDefinition",
            "src": "948:105:0",
            "nodes": [],
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1017:36:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1027:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 72,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1035:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1039:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1035:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1027:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:18:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "446563656e7472616c697a65644175746f6e6f6d6f75734f7267616e697a6174696f6e",
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "968:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_63e73cfcd29690a9142db2860412eebcc2a0b83e2b43f8637dccc3e0af538e03",
                      "typeString": "literal_string \"DecentralizedAutonomousOrganization\""
                    },
                    "value": "DecentralizedAutonomousOrganization"
                  },
                  {
                    "hexValue": "44414f",
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1006:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e",
                      "typeString": "literal_string \"DAO\""
                    },
                    "value": "DAO"
                  }
                ],
                "id": 69,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 66,
                  "name": "ERC20",
                  "nameLocations": [
                    "962:5:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 761,
                  "src": "962:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "962:50:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "959:2:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1017:0:0"
            },
            "scope": 174,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 112,
            "nodeType": "FunctionDefinition",
            "src": "1064:440:0",
            "nodes": [],
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1134:370:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1144:12:0",
                    "subExpression": {
                      "id": 84,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1144:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:12:0"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1166:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposals_$24_storage_$",
                          "typeString": "mapping(uint256 => struct DAO.Proposals storage ref)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "id": 88,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1176:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1166:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposals_$24_storage",
                        "typeString": "struct DAO.Proposals storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 91,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1220:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1242:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1246:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1242:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1266:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 95,
                            "name": "VotingStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1281:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingStatus_$8_$",
                              "typeString": "type(enum DAO.VotingStatus)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1294:10:0",
                          "memberName": "notStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "1281:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingStatus_$8",
                            "typeString": "enum DAO.VotingStatus"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1318:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1333:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_VotingStatus_$8",
                            "typeString": "enum DAO.VotingStatus"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 90,
                        "name": "Proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1188:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Proposals_$24_storage_ptr_$",
                          "typeString": "type(struct DAO.Proposals storage pointer)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1188:160:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposals_$24_memory_ptr",
                        "typeString": "struct DAO.Proposals memory"
                      }
                    },
                    "src": "1166:182:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposals_$24_storage",
                      "typeString": "struct DAO.Proposals storage ref"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:182:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 103,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1404:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 104,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1428:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1450:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1454:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1450:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102,
                      "name": "newProposalDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1363:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,string memory,address)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "EmitStatement",
                  "src": "1358:112:0"
                },
                {
                  "expression": {
                    "id": 109,
                    "name": "proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "1487:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 83,
                  "id": 110,
                  "nodeType": "Return",
                  "src": "1480:17:0"
                }
              ]
            },
            "functionSelector": "4f24186a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newProposal",
            "nameLocation": "1073:11:0",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "1099:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1085:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:24:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1124:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:6:0"
            },
            "scope": 174,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 134,
            "nodeType": "FunctionDefinition",
            "src": "1510:234:0",
            "nodes": [],
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1589:155:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 121,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1599:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposals_$24_storage_$",
                            "typeString": "mapping(uint256 => struct DAO.Proposals storage ref)"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "id": 122,
                          "name": "_proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1609:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1599:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposals_$24_storage",
                          "typeString": "struct DAO.Proposals storage ref"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1622:9:0",
                      "memberName": "threshold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1599:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1632:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1599:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 129,
                        "name": "_proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "1692:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 130,
                        "name": "threshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1718:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 128,
                      "name": "thresholdSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1657:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1657:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "EmitStatement",
                  "src": "1652:85:0"
                }
              ]
            },
            "functionSelector": "b9c36209",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 118,
                  "name": "onlyManager",
                  "nameLocations": [
                    "1572:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1572:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1572:11:0"
              }
            ],
            "name": "setThreshold",
            "nameLocation": "1519:12:0",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_proposalId",
                  "nameLocation": "1537:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1532:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "threshold",
                  "nameLocation": "1554:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1549:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1531:33:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:0:0"
            },
            "scope": 174,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 146,
            "nodeType": "FunctionDefinition",
            "src": "1816:121:0",
            "nodes": [],
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1891:46:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 141,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "1908:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 142,
                      "name": "tokensPerEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1915:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1908:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 140,
                  "id": 144,
                  "nodeType": "Return",
                  "src": "1901:28:0"
                }
              ]
            },
            "functionSelector": "13cc5724",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTokensCostInEther",
            "nameLocation": "1825:22:0",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1853:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1848:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:13:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1881:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:6:0"
            },
            "scope": 174,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 162,
            "nodeType": "FunctionDefinition",
            "src": "1943:171:0",
            "nodes": [],
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2003:111:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2019:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2023:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2019:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 154,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "2031:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 151,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "2013:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "2091:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 157,
                      "name": "tokensPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "2053:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "EmitStatement",
                  "src": "2048:59:0"
                }
              ]
            },
            "functionSelector": "c6656983",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseDAOtokens",
            "nameLocation": "1952:17:0",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1975:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "1970:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1969:13:0"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2003:0:0"
            },
            "scope": 174,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 173,
            "nodeType": "FunctionDefinition",
            "src": "2120:107:0",
            "nodes": [],
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2182:45:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2209:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2213:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2209:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 167,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "2199:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 166,
                  "id": 171,
                  "nodeType": "Return",
                  "src": "2192:28:0"
                }
              ]
            },
            "functionSelector": "27db2f71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkDAOtokenBalance",
            "nameLocation": "2129:20:0",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:2:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2172:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2171:6:0"
            },
            "scope": 174,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC20",
              "nameLocations": [
                "127:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 761,
              "src": "127:5:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "127:5:0"
          }
        ],
        "canonicalName": "DAO",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          174,
          761,
          864,
          839,
          886
        ],
        "name": "DAO",
        "nameLocation": "120:3:0",
        "scope": 175,
        "usedErrors": [],
        "usedEvents": [
          54,
          60,
          64,
          773,
          782
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}